*** ./drivers/video/tegra/dc/hdmi.c	2013-10-21 18:29:07.685103089 -0400
--- ./drivers/video/tegra/dc/hdmi.c	2013-10-21 20:05:29.461218465 -0400
***************
*** 1490,1496 ****
  					   msecs_to_jiffies(100));
  		else
  			queue_delayed_work(system_nrt_wq, &hdmi->work,
! 					   msecs_to_jiffies(30));
  	}
  	spin_unlock_irqrestore(&hdmi->suspend_lock, flags);
  
--- 1490,1496 ----
  					   msecs_to_jiffies(100));
  		else
  			queue_delayed_work(system_nrt_wq, &hdmi->work,
! 					   msecs_to_jiffies(2000));
  	}
  	spin_unlock_irqrestore(&hdmi->suspend_lock, flags);
  
***************
*** 1521,1527 ****
  				   msecs_to_jiffies(100));
  	else
  		queue_delayed_work(system_nrt_wq, &hdmi->work,
! 				   msecs_to_jiffies(30));
  
  	spin_unlock_irqrestore(&hdmi->suspend_lock, flags);
  	tegra_nvhdcp_resume(hdmi->nvhdcp);
--- 1521,1527 ----
  				   msecs_to_jiffies(100));
  	else
  		queue_delayed_work(system_nrt_wq, &hdmi->work,
! 				   msecs_to_jiffies(2000));
  
  	spin_unlock_irqrestore(&hdmi->suspend_lock, flags);
  	tegra_nvhdcp_resume(hdmi->nvhdcp);


*** ./drivers/video/tegra/fb.c	2013-10-21 18:29:07.689103089 -0400
--- ./drivers/video/tegra/fb.c	2013-10-22 20:17:43.744586082 -0400
***************
*** 56,61 ****
--- 56,63 ----
  
  	int			xres;
  	int			yres;
+ 	int			curr_xoffset;
+ 	int			curr_yoffset;
  };
  
  /* palette array used by the fbcon */
***************
*** 75,80 ****
--- 77,86 ----
  
  	/* Apply mode filter for HDMI only -LVDS supports only fix mode */
  	if (ops && ops->mode_filter) {
+ 		/* xoffset and yoffset are not preserved by conversion
+ 		 * to fb_videomode */
+ 		__u32 xoffset = var->xoffset;
+ 		__u32 yoffset = var->yoffset;
  
  		fb_var_to_videomode(&mode, var);
  		if (!ops->mode_filter(dc, &mode))
***************
*** 82,87 ****
--- 88,96 ----
  
  		/* Mode filter may have modified the mode */
  		fb_videomode_to_var(var, &mode);
+ 
+ 		var->xoffset = xoffset;
+ 		var->yoffset = yoffset;
  	}
  
  	/* Double yres_virtual to allow double buffering through pan_display */
***************
*** 293,304 ****
--- 302,329 ----
  	char __iomem *flush_end;
  	u32 addr;
  
+ 	/*
+ 	 * Do nothing if display parameters are same as current values.
+ 	 */
+ #if defined(CONFIG_ANDROID)
+ 	if ((var->xoffset == tegra_fb->curr_xoffset) &&
+ 	    (var->yoffset == tegra_fb->curr_yoffset) &&
+ 	    !(var->activate & FB_ACTIVATE_FORCE))
+ 		return 0;
+ #endif
+ 
  	if (!tegra_fb->win->cur_handle) {
  		flush_start = info->screen_base + (var->yoffset * info->fix.line_length);
  		flush_end = flush_start + (var->yres * info->fix.line_length);
  
  		info->var.xoffset = var->xoffset;
  		info->var.yoffset = var->yoffset;
+ 		/*
+ 		 * Save previous values of xoffset and yoffset so we can
+ 		 * pan display only when needed.
+ 		 */
+ 		tegra_fb->curr_xoffset = var->xoffset;
+ 		tegra_fb->curr_yoffset = var->yoffset;
  
  		addr = info->fix.smem_start + (var->yoffset * info->fix.line_length) +
  			(var->xoffset * (var->bits_per_pixel/8));
***************
*** 531,536 ****
--- 556,562 ----
  	tegra_fb->fb_mem = fb_mem;
  	tegra_fb->xres = fb_data->xres;
  	tegra_fb->yres = fb_data->yres;
+ 	tegra_fb->curr_xoffset = -1;
  
  	if (fb_mem) {
  		fb_size = resource_size(fb_mem);
